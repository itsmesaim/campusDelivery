<div class="vendor-dashboard">
    <!-- Header Section -->
    <div class="dashboard-header">
        <div class="vendor-info">
            <h1>Welcome, {{vendor.name}}!</h1>
            <p class="vendor-status">
                {{#if vendor.isOnline}}
                <span class="status online">🟢 Online</span>
                {{else}}
                <span class="status offline">🔴 Offline</span>
                {{/if}}
            </p>
        </div>
        <div class="header-actions">
            <button class="toggle-status-btn" onclick="toggleVendorStatus()">
                {{#if vendor.isOnline}}Go Offline{{else}}Go Online{{/if}}
            </button>
            <div class="profile-menu">
                <button class="profile-btn" onclick="toggleProfileMenu()">
                    <span class="profile-initials">{{vendor.name.[0]}}</span>
                </button>
                <div class="profile-dropdown" id="profileDropdown">
                    <a href="/dashboard/vendor/profile">👤 Profile</a>
                    <a href="/dashboard/vendor/menu">🍽️ Manage Menu</a>
                    <a href="/dashboard/vendor/analytics">📊 Analytics</a>
                    <a href="/auth/logout">🚪 Logout</a>
                </div>
            </div>
        </div>
    </div>

    <!-- Stats Cards -->
    <div class="stats-grid">
        <div class="stat-card">
            <div class="stat-icon">📦</div>
            <div class="stat-content">
                <h3>{{stats.pendingOrders}}</h3>
                <p>Pending Orders</p>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-icon">✅</div>
            <div class="stat-content">
                <h3>{{stats.todayOrders}}</h3>
                <p>Today's Orders</p>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-icon">💰</div>
            <div class="stat-content">
                <h3>₹{{formatCurrency stats.todayRevenue}}</h3>
                <p>Today's Revenue</p>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-icon">⭐</div>
            <div class="stat-content">
                <h3>{{vendor.rating}}</h3>
                <p>Rating</p>
            </div>
        </div>
    </div>

    <!-- New Orders Section -->
    {{#if newOrders.length}}
    <section class="orders-section">
        <h2>🔔 New Orders ({{newOrders.length}})</h2>
        <div class="orders-grid">
            {{#each newOrders}}
            <div class="order-card new-order">
                <div class="order-header">
                    <div class="order-info">
                        <h3>Order #{{this.orderNumber}}</h3>
                        <p class="customer-name">{{this.userId.name}}</p>
                        <p class="order-time">{{timeAgo this.createdAt}}</p>
                    </div>
                    <div class="order-total">₹{{this.total}}</div>
                </div>

                <div class="order-items">
                    {{#each this.items}}
                    <div class="order-item">
                        <span>{{this.name}} × {{this.quantity}}</span>
                        <span>₹{{this.total}}</span>
                    </div>
                    {{/each}}
                </div>

                <div class="order-details">
                    <p><strong>Address:</strong> {{this.deliveryAddress}}</p>
                    <p><strong>Phone:</strong> {{this.phone}}</p>
                    <p><strong>Payment:</strong> {{this.paymentMethod}}</p>
                    {{#if this.notes}}
                    <p><strong>Notes:</strong> {{this.notes}}</p>
                    {{/if}}
                </div>

                <div class="order-actions">
                    <button class="accept-btn" onclick="acceptOrder('{{this._id}}')">
                        ✅ Accept
                    </button>
                    <button class="reject-btn" onclick="rejectOrder('{{this._id}}')">
                        ❌ Reject
                    </button>
                </div>
            </div>
            {{/each}}
        </div>
    </section>
    {{/if}}

    <!-- Active Orders Section -->
    {{#if activeOrders.length}}
    <section class="orders-section">
        <h2>🔥 Active Orders ({{activeOrders.length}})</h2>
        <div class="orders-grid">
            {{#each activeOrders}}
            <div class="order-card active-order">
                <div class="order-header">
                    <div class="order-info">
                        <h3>Order #{{this.orderNumber}}</h3>
                        <p class="customer-name">{{this.userId.name}}</p>
                        <span class="status-badge status-{{this.status}}">{{this.status}}</span>
                    </div>
                    <div class="order-total">₹{{this.total}}</div>
                </div>

                <div class="order-items">
                    {{#each this.items}}
                    <div class="order-item">
                        <span>{{this.name}} × {{this.quantity}}</span>
                        <span>₹{{this.total}}</span>
                    </div>
                    {{/each}}
                </div>

                <div class="order-progress">
                    <div class="progress-bar">
                        <div class="progress-fill" data-status="{{this.status}}"></div>
                    </div>
                    <div class="progress-steps">
                        <button class="step-btn {{#if (eq this.status 'CONFIRMED')}}active{{/if}}"
                            onclick="updateOrderStatus('{{this._id}}', 'CONFIRMED')" {{#unless (eq
                            this.status 'CONFIRMED' )}}disabled{{/unless}}>
                            Confirmed
                        </button>
                        <button class="step-btn {{#if (eq this.status 'PREPARING')}}active{{/if}}"
                            onclick="updateOrderStatus('{{this._id}}', 'PREPARING')" {{#unless (eq
                            this.status 'CONFIRMED' )}}disabled{{/unless}}>
                            Preparing
                        </button>
                        <button class="step-btn {{#if (eq this.status 'READY')}}active{{/if}}"
                            onclick="updateOrderStatus('{{this._id}}', 'READY')" {{#unless (eq this.status 'PREPARING'
                            )}}disabled{{/unless}}>
                            Ready
                        </button>
                        <button class="step-btn {{#if (eq this.status 'DELIVERED')}}active{{/if}}"
                            onclick="updateOrderStatus('{{this._id}}', 'DELIVERED')" {{#unless (eq this.status 'READY'
                            )}}disabled{{/unless}}>
                            Delivered
                        </button>
                    </div>
                </div>

                <div class="customer-contact">
                    <button class="contact-btn" onclick="contactCustomer('{{this.phone}}')">
                        📞 Call Customer
                    </button>
                </div>
            </div>
            {{/each}}
        </div>
    </section>
    {{/if}}

    <!-- Quick Actions -->
    <section class="quick-actions-section">
        <h2>⚡ Quick Actions</h2>
        <div class="actions-grid">
            <a href="/dashboard/vendor/menu" class="action-card">
                <div class="action-icon">🍽️</div>
                <h3>Manage Menu</h3>
                <p>Add, edit, or remove items</p>
            </a>
            <a href="/dashboard/vendor/orders" class="action-card">
                <div class="action-icon">📋</div>
                <h3>Order History</h3>
                <p>View all past orders</p>
            </a>
            <a href="/dashboard/vendor/analytics" class="action-card">
                <div class="action-icon">📊</div>
                <h3>Analytics</h3>
                <p>Sales and performance data</p>
            </a>
            <button class="action-card" onclick="toggleVendorStatus()">
                <div class="action-icon">⏰</div>
                <h3>{{#if vendor.isOnline}}Close Shop{{else}}Open Shop{{/if}}</h3>
                <p>Change availability status</p>
            </button>
        </div>
    </section>

    {{#unless newOrders.length}}
    {{#unless activeOrders.length}}
    <div class="empty-state">
        <div class="empty-icon">📦</div>
        <h3>No orders right now</h3>
        <p>{{#if vendor.isOnline}}You're online and ready to receive orders!{{else}}Go online to start receiving
            orders{{/if}}</p>
        {{#unless vendor.isOnline}}
        <button class="go-online-btn" onclick="toggleVendorStatus()">Go Online</button>
        {{/unless}}
    </div>
    {{/unless}}
    {{/unless}}
</div>

<style>
    .vendor-dashboard {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
        background: #f8fafc;
        min-height: 100vh;
    }

    .dashboard-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background: white;
        padding: 24px;
        border-radius: 16px;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.05);
        margin-bottom: 24px;
    }

    .vendor-info h1 {
        font-size: 28px;
        font-weight: 700;
        color: #1a202c;
        margin-bottom: 8px;
    }

    .vendor-status {
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .status {
        padding: 4px 12px;
        border-radius: 12px;
        font-size: 14px;
        font-weight: 600;
    }

    .status.online {
        background: #c6f6d5;
        color: #22543d;
    }

    .status.offline {
        background: #fed7d7;
        color: #742a2a;
    }

    .header-actions {
        display: flex;
        align-items: center;
        gap: 16px;
    }

    .toggle-status-btn {
        background: #667eea;
        color: white;
        padding: 12px 20px;
        border: none;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .toggle-status-btn:hover {
        background: #5a67d8;
        transform: translateY(-1px);
    }

    .profile-menu {
        position: relative;
    }

    .profile-btn {
        width: 48px;
        height: 48px;
        border-radius: 50%;
        background: #667eea;
        color: white;
        border: none;
        cursor: pointer;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .profile-btn:hover {
        background: #5a67d8;
        transform: scale(1.05);
    }

    .profile-dropdown {
        position: absolute;
        top: 100%;
        right: 0;
        background: white;
        border-radius: 12px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        padding: 8px 0;
        min-width: 180px;
        z-index: 1000;
        opacity: 0;
        visibility: hidden;
        transform: translateY(-10px);
        transition: all 0.3s ease;
    }

    .profile-dropdown.show {
        opacity: 1;
        visibility: visible;
        transform: translateY(0);
    }

    .profile-dropdown a {
        display: block;
        padding: 12px 16px;
        color: #4a5568;
        text-decoration: none;
        font-size: 14px;
        transition: background 0.2s ease;
    }

    .profile-dropdown a:hover {
        background: #f7fafc;
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 32px;
    }

    .stat-card {
        background: white;
        padding: 20px;
        border-radius: 16px;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.05);
        display: flex;
        align-items: center;
        gap: 16px;
    }

    .stat-icon {
        font-size: 32px;
        width: 60px;
        height: 60px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: #f7fafc;
        border-radius: 12px;
    }

    .stat-content h3 {
        font-size: 24px;
        font-weight: 700;
        color: #1a202c;
        margin-bottom: 4px;
    }

    .stat-content p {
        color: #4a5568;
        font-size: 14px;
    }

    .orders-section {
        margin-bottom: 32px;
    }

    .orders-section h2 {
        font-size: 22px;
        font-weight: 700;
        color: #1a202c;
        margin-bottom: 16px;
    }

    .orders-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
        gap: 20px;
    }

    .order-card {
        background: white;
        border-radius: 16px;
        padding: 20px;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.05);
        transition: transform 0.2s ease;
    }

    .order-card:hover {
        transform: translateY(-2px);
    }

    .new-order {
        border-left: 4px solid #f59e0b;
        animation: pulse-glow 2s infinite;
    }

    .active-order {
        border-left: 4px solid #10b981;
    }

    @keyframes pulse-glow {

        0%,
        100% {
            box-shadow: 0 2px 12px rgba(0, 0, 0, 0.05);
        }

        50% {
            box-shadow: 0 2px 12px rgba(245, 158, 11, 0.2);
        }
    }

    .order-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 16px;
        padding-bottom: 12px;
        border-bottom: 1px solid #e2e8f0;
    }

    .order-info h3 {
        font-size: 18px;
        font-weight: 700;
        color: #1a202c;
        margin-bottom: 4px;
    }

    .customer-name {
        color: #667eea;
        font-weight: 500;
        margin-bottom: 2px;
    }

    .order-time {
        color: #718096;
        font-size: 12px;
    }

    .order-total {
        font-size: 20px;
        font-weight: 700;
        color: #1a202c;
    }

    .status-badge {
        display: inline-block;
        padding: 2px 8px;
        border-radius: 8px;
        font-size: 12px;
        font-weight: 600;
        text-transform: uppercase;
    }

    .status-CONFIRMED {
        background: #dbeafe;
        color: #2563eb;
    }

    .status-PREPARING {
        background: #fef3c7;
        color: #d97706;
    }

    .status-READY {
        background: #d1fae5;
        color: #059669;
    }

    .status-DELIVERED {
        background: #c6f6d5;
        color: #16a34a;
    }

    .order-items {
        margin-bottom: 16px;
    }

    .order-item {
        display: flex;
        justify-content: space-between;
        padding: 4px 0;
        font-size: 14px;
    }

    .order-details {
        margin-bottom: 16px;
        font-size: 14px;
        color: #4a5568;
    }

    .order-details p {
        margin-bottom: 4px;
    }

    .order-actions {
        display: flex;
        gap: 12px;
    }

    .accept-btn,
    .reject-btn {
        flex: 1;
        padding: 10px;
        border: none;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .accept-btn {
        background: #10b981;
        color: white;
    }

    .accept-btn:hover {
        background: #059669;
    }

    .reject-btn {
        background: #ef4444;
        color: white;
    }

    .reject-btn:hover {
        background: #dc2626;
    }

    .order-progress {
        margin-bottom: 16px;
    }

    .progress-bar {
        width: 100%;
        height: 4px;
        background: #e2e8f0;
        border-radius: 2px;
        margin-bottom: 12px;
        overflow: hidden;
    }

    .progress-fill {
        height: 100%;
        background: #10b981;
        border-radius: 2px;
        transition: width 0.3s ease;
    }

    .progress-fill[data-status="CONFIRMED"] {
        width: 25%;
    }

    .progress-fill[data-status="PREPARING"] {
        width: 50%;
    }

    .progress-fill[data-status="READY"] {
        width: 75%;
    }

    .progress-fill[data-status="DELIVERED"] {
        width: 100%;
    }

    .progress-steps {
        display: flex;
        gap: 8px;
    }

    .step-btn {
        flex: 1;
        padding: 6px 8px;
        border: 1px solid #e2e8f0;
        background: white;
        border-radius: 6px;
        font-size: 12px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .step-btn:hover:not(:disabled) {
        background: #f7fafc;
    }

    .step-btn.active {
        background: #10b981;
        color: white;
        border-color: #10b981;
    }

    .step-btn:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }

    .customer-contact {
        text-align: center;
    }

    .contact-btn {
        background: #667eea;
        color: white;
        padding: 8px 16px;
        border: none;
        border-radius: 6px;
        font-size: 14px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .contact-btn:hover {
        background: #5a67d8;
    }

    .quick-actions-section {
        margin-bottom: 32px;
    }

    .quick-actions-section h2 {
        font-size: 22px;
        font-weight: 700;
        color: #1a202c;
        margin-bottom: 16px;
    }

    .actions-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 16px;
    }

    .action-card {
        background: white;
        padding: 20px;
        border-radius: 16px;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.05);
        text-decoration: none;
        color: inherit;
        transition: all 0.3s ease;
        text-align: center;
        border: none;
        cursor: pointer;
        font-family: inherit;
    }

    .action-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    }

    .action-icon {
        font-size: 32px;
        margin-bottom: 12px;
    }

    .action-card h3 {
        font-size: 16px;
        font-weight: 700;
        color: #1a202c;
        margin-bottom: 4px;
    }

    .action-card p {
        color: #4a5568;
        font-size: 14px;
    }

    .empty-state {
        text-align: center;
        background: white;
        padding: 60px 40px;
        border-radius: 16px;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.05);
    }

    .empty-icon {
        font-size: 64px;
        margin-bottom: 16px;
    }

    .empty-state h3 {
        font-size: 24px;
        font-weight: 700;
        color: #1a202c;
        margin-bottom: 8px;
    }

    .empty-state p {
        color: #4a5568;
        margin-bottom: 24px;
    }

    .go-online-btn {
        background: #10b981;
        color: white;
        padding: 12px 24px;
        border: none;
        border-radius: 12px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .go-online-btn:hover {
        background: #059669;
        transform: translateY(-2px);
    }

    @media (max-width: 768px) {
        .vendor-dashboard {
            padding: 12px;
        }

        .dashboard-header {
            flex-direction: column;
            gap: 16px;
            align-items: flex-start;
        }

        .header-actions {
            width: 100%;
            justify-content: space-between;
        }

        .stats-grid {
            grid-template-columns: repeat(2, 1fr);
        }

        .orders-grid {
            grid-template-columns: 1fr;
        }

        .actions-grid {
            grid-template-columns: repeat(2, 1fr);
        }
    }
</style>

<script>
    // Vendor Dashboard JavaScript
    function toggleProfileMenu() {
        document.getElementById('profileDropdown').classList.toggle('show');
    }

    // Close profile menu when clicking outside
    document.addEventListener('click', function (e) {
        if (!e.target.closest('.profile-menu')) {
            document.getElementById('profileDropdown').classList.remove('show');
        }
    });

    function toggleVendorStatus() {
        if (confirm('Are you sure you want to change your availability status?')) {
            fetch('/vendor/toggle-status', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showNotification(data.message, 'success');
                        setTimeout(() => {
                            window.location.reload();
                        }, 1000);
                    } else {
                        showNotification(data.message, 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showNotification('Failed to update status', 'error');
                });
        }
    }

    function acceptOrder(orderId) {
        if (confirm('Accept this order?')) {
            updateOrderStatus(orderId, 'CONFIRMED');
        }
    }

    function rejectOrder(orderId) {
        const reason = prompt('Reason for rejection (optional):');
        if (reason !== null) {
            fetch(`/vendor/orders/${orderId}/reject`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ reason })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showNotification('Order rejected', 'success');
                        setTimeout(() => {
                            window.location.reload();
                        }, 1000);
                    } else {
                        showNotification(data.message, 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showNotification('Failed to reject order', 'error');
                });
        }
    }

    function updateOrderStatus(orderId, status) {
        fetch(`/vendor/orders/${orderId}/status`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ status })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showNotification(`Order marked as ${status.toLowerCase()}`, 'success');
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                } else {
                    showNotification(data.message, 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showNotification('Failed to update order status', 'error');
            });
    }

    function contactCustomer(phone) {
        if (confirm(`Call customer at ${phone}?`)) {
            window.open(`tel:${phone}`);
        }
    }

    function showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.className = 'notification';

        const colors = {
            success: '#10b981',
            error: '#ef4444',
            warning: '#f59e0b',
            info: '#3b82f6'
        };

        notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: ${colors[type]};
        color: white;
        padding: 16px 20px;
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
        z-index: 9999;
        font-weight: 500;
        max-width: 350px;
        animation: slideInRight 0.3s ease;
    `;

        notification.textContent = message;
        document.body.appendChild(notification);

        setTimeout(() => {
            notification.style.animation = 'fadeOut 0.3s ease';
            setTimeout(() => notification.remove(), 300);
        }, 3000);
    }

    // Auto-refresh for new orders every 30 seconds
    setInterval(() => {
        // In a real app, this would check for new orders via AJAX
        console.log('Checking for new orders...');
    }, 30000);

    // Sound notification for new orders (if supported)
    function playNotificationSound() {
        try {
            const audio = new Audio('data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmIcBiGD1fPSfS0FIXbB8N2QQAoUWLPn6ahSEQ1ZeP/nUBI7Y8vyuXkqBE9pquN88LNuLQRDo+zxrmASFGe46+iVQwASI27+5Zt0lwESfr/w3VD4n30u/9TkjmtLEBFWouGk');
            audio.play();
        } catch (e) {
            console.log('Audio notification not supported');
        }
    }
</script>